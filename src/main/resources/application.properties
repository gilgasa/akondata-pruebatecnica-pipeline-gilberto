# ============= Server Settings =============
# Define el puerto en el que se ejecutar\u00e1 la aplicaci\u00f3n. Si se especifica una variable de entorno PORT, se usar\u00e1 ese valor; de lo contrario, el puerto predeterminado ser\u00e1 8080.
server.port=${PORT:8080}

# ============= Custom Properties =============
# Versi\u00f3n de la aplicaci\u00f3n, configurable mediante la variable de entorno VERSION. Predeterminado a 'v1'.
version=${VERSION:v1}
# Rol del usuario que ejecuta la aplicaci\u00f3n, configurable mediante la variable de entorno ROLE. Predeterminado a 'Producci\u00f3n'.
user.role=${ROLE:Producci\u00f3n}
# Alias o descripci\u00f3n del usuario o instancia que ejecuta la aplicaci\u00f3n, configurable mediante la variable de entorno ALIAS. Predeterminado a 'Bimbonet Gilberto Garc\u00eda'.
user.alias=${ALIAS:Bimbonet Gilberto Garc\u00eda}

# Define la estrategia de coincidencia de rutas de Spring MVC. 'ant_path_matcher' permite usar patrones tipo Ant.
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# ============= Data Source & JPA =============
# Configuraci\u00f3n de la base de datos H2 en memoria para desarrollo y pruebas.
spring.datasource.url=jdbc:h2:mem:akondata
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
# Especifica el dialecto de Hibernate a usar para la base de datos H2.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Habilita la consola H2 para acceso web a la base de datos en memoria, \u00fatil para desarrollo y pruebas.
spring.h2.console.enabled=true

# Muestra las consultas SQL generadas por JPA en el log, \u00fatil para depuraci\u00f3n y desarrollo.
spring.jpa.show-sql=true
# Al iniciar, Hibernate crear\u00e1 autom\u00e1ticamente el esquema de base de datos bas\u00e1ndose en las entidades.
spring.jpa.hibernate.ddl-auto=create
# Deshabilita el patr\u00f3n 'Open Session in View' para prevenir problemas de rendimiento asociados con sesiones Hibernate abiertas.
spring.jpa.open-in-view=false
